// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiTenant.Data.Contexts;

namespace MultiTenant.Data.Migrations.MultiTenant
{
    [DbContext(typeof(MultiTenantContext))]
    [Migration("20210712155755_CreateMultiTenantDB2")]
    partial class CreateMultiTenantDB2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MultiTenant.Data.EntitiesTenant.MultiTenants.Account", b =>
                {
                    b.Property<int>("AccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("MultiTenant.Data.EntitiesTenant.MultiTenants.AccountTenant", b =>
                {
                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("AccId", "TenantId");

                    b.HasIndex("TenantId");

                    b.ToTable("AccountTenants");
                });

            modelBuilder.Entity("MultiTenant.Data.EntitiesTenant.MultiTenants.Tenant", b =>
                {
                    b.Property<int>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DbName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Favicon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("MultiTenant.Data.EntitiesTenant.MultiTenants.AccountTenant", b =>
                {
                    b.HasOne("MultiTenant.Data.EntitiesTenant.MultiTenants.Account", "Account")
                        .WithMany("AccountTenants")
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiTenant.Data.EntitiesTenant.MultiTenants.Tenant", "Tenant")
                        .WithMany("AccountTenants")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MultiTenant.Data.EntitiesTenant.MultiTenants.Account", b =>
                {
                    b.Navigation("AccountTenants");
                });

            modelBuilder.Entity("MultiTenant.Data.EntitiesTenant.MultiTenants.Tenant", b =>
                {
                    b.Navigation("AccountTenants");
                });
#pragma warning restore 612, 618
        }
    }
}
